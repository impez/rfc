[{"C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\index.js":"1","C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\App.js":"2","C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\Theme.js":"3","C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\reducers\\index.js":"4","C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\components\\Navigation\\TabPanel.js":"5","C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\components\\Comparisons\\Comparisons.js":"6","C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\components\\Ranking\\Ranking.js":"7","C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\components\\Start\\Start.js":"8","C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\actions\\index.js":"9","C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\components\\Start\\VariantsList.js":"10","C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\components\\Start\\CriteriasList.js":"11","C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\components\\Start\\SimpleAccordion.js":"12","C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\components\\Start\\hoc\\withList.js":"13","C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\components\\Ranking\\hoc\\withRanking.js":"14","C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\components\\Comparisons\\hoc\\withComparisons.js":"15","C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\components\\Sliders\\MultiSlider.js":"16","C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\components\\Sliders\\hoc\\withSlider.js":"17","C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\ahpLogic\\index.js":"18","C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\components\\Experts\\Experts.js":"19","C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\components\\Experts\\ExpertsAccordion.js":"20","C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\components\\Ranking\\TwoColumnTable.js":"21","C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\components\\Ranking\\Chart.js":"22"},{"size":617,"mtime":1607745083364,"results":"23","hashOfConfig":"24"},{"size":5198,"mtime":1611142400088,"results":"25","hashOfConfig":"24"},{"size":533,"mtime":1607745083355,"results":"26","hashOfConfig":"24"},{"size":3430,"mtime":1610995389007,"results":"27","hashOfConfig":"24"},{"size":547,"mtime":1607745083358,"results":"28","hashOfConfig":"24"},{"size":1074,"mtime":1610044738968,"results":"29","hashOfConfig":"24"},{"size":3438,"mtime":1611142497559,"results":"30","hashOfConfig":"24"},{"size":5703,"mtime":1610995557473,"results":"31","hashOfConfig":"24"},{"size":1844,"mtime":1610995330695,"results":"32","hashOfConfig":"24"},{"size":1887,"mtime":1610814296458,"results":"33","hashOfConfig":"24"},{"size":1900,"mtime":1610814289647,"results":"34","hashOfConfig":"24"},{"size":2446,"mtime":1610814149036,"results":"35","hashOfConfig":"24"},{"size":2478,"mtime":1608301044884,"results":"36","hashOfConfig":"24"},{"size":3114,"mtime":1610815468802,"results":"37","hashOfConfig":"24"},{"size":2001,"mtime":1610815524330,"results":"38","hashOfConfig":"24"},{"size":899,"mtime":1610074727300,"results":"39","hashOfConfig":"24"},{"size":3377,"mtime":1609000567654,"results":"40","hashOfConfig":"24"},{"size":7194,"mtime":1608301044868,"results":"41","hashOfConfig":"24"},{"size":1420,"mtime":1611142560115,"results":"42","hashOfConfig":"24"},{"size":1095,"mtime":1608301044871,"results":"43","hashOfConfig":"24"},{"size":2969,"mtime":1610814523392,"results":"44","hashOfConfig":"24"},{"size":1926,"mtime":1610814535020,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1clfxry",{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"48"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"48"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"48"},"C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\index.js",[],["100","101"],"C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\App.js",["102","103","104"],"C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\Theme.js",[],"C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\reducers\\index.js",[],"C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\components\\Navigation\\TabPanel.js",[],"C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\components\\Comparisons\\Comparisons.js",["105"],"import React from \"react\";\r\nimport MultiSlider from \"../Sliders/MultiSlider\";\r\nimport withComparisons from \"./hoc/withComparisons\";\r\n\r\nconst shuffle = (a) => {\r\n  for (let i = a.length - 1; i > 0; i--) {\r\n    const j = Math.floor(Math.random() * (i + 1));\r\n    [a[i], a[j]] = [a[j], a[i]];\r\n  }\r\n  return a;\r\n};\r\n\r\nconst Comparisons = (props) => {\r\n  const [output, setOutput] = React.useState(\"\");\r\n\r\n  React.useEffect(() => {\r\n    const sliders = props.pairs.map((pair) => {\r\n      const [leftComp, rightComp] = [pair[0], pair[1]];\r\n      return (\r\n        <MultiSlider\r\n          leftComp={leftComp}\r\n          rightComp={rightComp}\r\n          criteria={props.criteria}\r\n          key={`${props.criteria}:${leftComp}:${rightComp}`}\r\n          update={props.update}\r\n        />\r\n      );\r\n    });\r\n\r\n    setOutput(shuffle(sliders));\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        width: \"100%\",\r\n      }}\r\n    >\r\n      {output}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withComparisons(Comparisons);\r\n","C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\components\\Ranking\\Ranking.js",["106"],"C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\components\\Start\\Start.js",["107","108"],"import React from \"react\";\r\nimport {\r\n  Stepper,\r\n  Step,\r\n  StepLabel,\r\n  StepContent,\r\n  Button,\r\n  Typography,\r\n  Paper,\r\n  Grid,\r\n  Snackbar,\r\n  TextField,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport SimpleAccordion from \"./SimpleAccordion\";\r\nimport CriteriasList from \"./CriteriasList\";\r\nimport VariantsList from \"./VariantsList\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  updateGoal,\r\n  updateExpertName,\r\n  setRoute,\r\n  start,\r\n  blockEval,\r\n} from \"../../actions\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"standard\" {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"90%\",\r\n    margin: \"0 auto\",\r\n  },\r\n  button: {\r\n    marginTop: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  actionsContainer: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  resetContainer: {\r\n    padding: theme.spacing(3),\r\n  },\r\n  stepper: {\r\n    width: \"95%\",\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      width: \"100%\",\r\n    },\r\n  },\r\n}));\r\n\r\nfunction getSteps() {\r\n  return [\"Ustal cel\", \"Dobierz kryteria\", \"Dobierz warianty\"];\r\n}\r\n\r\nfunction isEmptyString(str) {\r\n  if (str.replace(/\\s/g, \"\") == \"\") {\r\n    return true;\r\n  } else return false;\r\n}\r\n\r\nfunction errorMessage(step) {\r\n  switch (step) {\r\n    case 0:\r\n      return \"Cel nie może być pusty\";\r\n\r\n    case 1:\r\n      return \"Wpisz co najmniej dwa kryteria\";\r\n\r\n    case 2:\r\n      return \"Wpisz co najmniej dwie alternatywy\";\r\n\r\n    default:\r\n      break;\r\n  }\r\n}\r\n\r\nfunction Start(props) {\r\n  const classes = useStyles();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const steps = getSteps();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClick = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleGoalChange = (e) => {\r\n    props.updateGoal(e.target.value);\r\n  };\r\n\r\n  const handleTextChange = (e) => {\r\n    props.updateExpertName(e.target.value);\r\n  };\r\n\r\n  function getStepContent(step) {\r\n    switch (step) {\r\n      case 0:\r\n        return (\r\n          <div>\r\n            <TextField\r\n              id=\"standard-basic\"\r\n              label=\"Wpisz cel\"\r\n              value={props.goal}\r\n              onChange={handleGoalChange}\r\n            />\r\n          </div>\r\n        );\r\n      case 1:\r\n        return (\r\n          <div>\r\n            <CriteriasList />\r\n          </div>\r\n        );\r\n      case 2:\r\n        return (\r\n          <div>\r\n            <VariantsList />\r\n          </div>\r\n        );\r\n      default:\r\n        return \"Unknown step\";\r\n    }\r\n  }\r\n\r\n  const handleNext = () => {\r\n    if (activeStep === 0 && isEmptyString(props.goal)) {\r\n      setOpen(true);\r\n    } else if (activeStep === 1 && props.criterias.length < 2) {\r\n      setOpen(true);\r\n    } else if (activeStep === 2 && props.variants.length < 2) {\r\n      setOpen(true);\r\n    } else {\r\n      setOpen(false);\r\n      setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n\r\n      if (activeStep >= 2) {\r\n        props.setRoute(\"kryteria\");\r\n        props.initCb(true);\r\n        props.start(true);\r\n        props.blockEval(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  };\r\n\r\n  return (\r\n    <Paper>\r\n      <Grid container>\r\n        <Grid item xs={12} md={6}>\r\n          <div className={classes.root}>\r\n            <Stepper\r\n              className={classes.stepper}\r\n              activeStep={activeStep}\r\n              orientation=\"vertical\"\r\n            >\r\n              {steps.map((label, index) => (\r\n                <Step key={label}>\r\n                  <StepLabel>{label}</StepLabel>\r\n                  <StepContent>\r\n                    <Typography>{getStepContent(index)}</Typography>\r\n                    <div className={classes.actionsContainer}>\r\n                      <div>\r\n                        <Button\r\n                          disabled={activeStep === 0}\r\n                          onClick={handleBack}\r\n                          className={classes.button}\r\n                        >\r\n                          wstecz\r\n                        </Button>\r\n                        <Button\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          onClick={handleNext}\r\n                          className={classes.button}\r\n                        >\r\n                          {activeStep === steps.length - 1 ? \"start\" : \"dalej\"}\r\n                        </Button>\r\n                      </div>\r\n                    </div>\r\n                  </StepContent>\r\n                </Step>\r\n              ))}\r\n            </Stepper>\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <SimpleAccordion />\r\n        </Grid>\r\n        <Grid item xs={12} md={12}>\r\n          <TextField\r\n            label=\"ID (Opcjonalnie)\"\r\n            size=\"small\"\r\n            onChange={handleTextChange}\r\n            value={props.expertName}\r\n            style={{\r\n              margin: \"1em\",\r\n            }}\r\n            variant=\"filled\"\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Snackbar open={open} autoHideDuration={3000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity=\"error\">\r\n          {errorMessage(activeStep)}\r\n        </Alert>\r\n      </Snackbar>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return state;\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  updateGoal,\r\n  updateExpertName,\r\n  setRoute,\r\n  start,\r\n  blockEval,\r\n})(Start);\r\n","C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\actions\\index.js",[],"C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\components\\Start\\VariantsList.js",[],"C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\components\\Start\\CriteriasList.js",[],"C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\components\\Start\\SimpleAccordion.js",["109"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport {\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { Slider } from \"@material-ui/core\";\r\n\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    cursor: \"default\",\r\n    width: \"100%\",\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(14),\r\n    fontWeight: theme.typography.fontWeightMedium,\r\n  },\r\n}));\r\n\r\nexport default function SimpleAccordion() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Accordion square>\r\n        <AccordionSummary className=\"accordion\" expandIcon={<ExpandMoreIcon />}>\r\n          <Typography className={classes.heading} variant=\"overline\">\r\n            O Analitycznym Procesie Hierarchicznym\r\n          </Typography>\r\n        </AccordionSummary>\r\n\r\n        <AccordionDetails>\r\n          <Typography\r\n            align=\"justify\"\r\n            style={{ padding: \"0.6em\", textIndent: \"3em\", opacity: \"0.8\" }}\r\n          >\r\n            AHP zostało zaproponowane w 1970 roku przez Thomasa L. Saaty’ego,\r\n            amerykańskiego matematyka. Metoda w zamiarze autora miała być prosta\r\n            oraz uniwersalna, pozwalająca ekspertowi-decydentowi\r\n            (ekspert-decydent – jest to jedno z kluczowych pojęć) na swobodne\r\n            podejmowanie zależnych od siebie decyzji, według których docelowo\r\n            otrzymałby ranking, który miałby pomóc w wyborze najlepszej możliwej\r\n            opcji spośród wprowadzonych przez niego wariantów.\r\n          </Typography>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n\r\n      <Accordion square>\r\n        <AccordionSummary className=\"accordion\" expandIcon={<ExpandMoreIcon />}>\r\n          <Typography className={classes.heading} variant=\"overline\">\r\n            informacje\r\n          </Typography>\r\n        </AccordionSummary>\r\n\r\n        <AccordionDetails>\r\n          <Typography style={{ padding: \"0.6em\", opacity: \"0.8\" }}>\r\n            <ul>\r\n              <b>Dyplomant:</b> Michał Walczuk, michal.walczuk@pollub.edu.pl{\" \"}\r\n              <br />\r\n              <b>Promotor:</b> dr hab. Paweł Karczmarek, prof. uczelni,\r\n              p.karczmarek@pollub.pl\r\n            </ul>\r\n          </Typography>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\components\\Start\\hoc\\withList.js",["110","111"],"import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Button, Snackbar } from \"@material-ui/core\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"standard\" {...props} />;\r\n}\r\n\r\nfunction isEmptyString(str) {\r\n  if (str.replace(/\\s/g, \"\") == \"\") {\r\n    return true;\r\n  } else return false;\r\n}\r\n\r\nconst withList = (WrappedComponent, settings) => {\r\n  const [addItem, removeItem] = settings.update;\r\n  const { type } = settings;\r\n\r\n  return connect(mapStateToProps, { addItem, removeItem })((props) => {\r\n    const items = props[type];\r\n    const [text, setText] = React.useState(\"\");\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    function errorMessage(type) {\r\n      switch (type) {\r\n        case \"criterias\":\r\n          if (isEmptyString(text)) return \"Pole nie może być puste\";\r\n          else return \"Takie kryterium już znajduje się na liście\";\r\n\r\n        case \"variants\":\r\n          if (isEmptyString(text)) return \"Pole nie może być puste\";\r\n          else return \"Taki wariant już znajduje się na liście\";\r\n\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n\r\n    const includes = (item, type) =>\r\n      type === \"criterias\"\r\n        ? props.criterias.includes(item)\r\n        : props.variants.includes(item);\r\n\r\n    const onTextChange = (e) => {\r\n      setOpen(false);\r\n      setText(e.target.value);\r\n    };\r\n\r\n    const onItemAdd = () => {\r\n      if (includes(text, type) || isEmptyString(text)) {\r\n        setOpen(true);\r\n      } else {\r\n        props.addItem(text);\r\n        setText(\"\");\r\n      }\r\n    };\r\n\r\n    const onItemRemove = (removedItem) => {\r\n      setOpen(false);\r\n      props.removeItem(removedItem);\r\n    };\r\n\r\n    const handleClose = (event, reason) => {\r\n      if (reason === \"clickaway\") {\r\n        return;\r\n      }\r\n\r\n      setOpen(false);\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <WrappedComponent\r\n          {...props}\r\n          items={items}\r\n          onTextChange={onTextChange}\r\n          onItemAdd={onItemAdd}\r\n          onItemRemove={onItemRemove}\r\n          text={text}\r\n        />\r\n\r\n        <Snackbar open={open} autoHideDuration={2000} onClose={handleClose}>\r\n          <Alert onClose={handleClose} severity=\"error\">\r\n            {errorMessage(type)}\r\n          </Alert>\r\n        </Snackbar>\r\n      </div>\r\n    );\r\n  });\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return state;\r\n};\r\n\r\nexport default withList;\r\n","C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\components\\Ranking\\hoc\\withRanking.js",["112"],"import React from \"react\";\r\nimport { AHPUser, AHPItem, FuzzyMiddleman } from \"../../../ahpLogic\";\r\nimport { connect } from \"react-redux\";\r\nimport { Grid, Paper, Typography } from \"@material-ui/core\";\r\nimport _ from \"lodash\";\r\n\r\nconst withRanking = (WrappedComponent) => {\r\n  let decisionMaker;\r\n\r\n  return connect(mapStateToProps)((props) => {\r\n    const [userMetadata, setUserMetadata] = React.useState({});\r\n\r\n    const { criterias, variants, criteriasSliders, variantsSliders } = props;\r\n\r\n    const initRanking = () => {\r\n      const metadata = { criteriasRank: {}, variantsRank: {} };\r\n\r\n      decisionMaker = new AHPUser({\r\n        criteriaItems: criterias,\r\n        variantItems: variants,\r\n        criteriaRates: criteriasSliders,\r\n        variantRates: variantsSliders,\r\n      });\r\n\r\n      for (const criteriaItem of decisionMaker.criteriaItems) {\r\n        const rate = decisionMaker.getVariantRates();\r\n        const variantRate = rate[criteriaItem];\r\n\r\n        const variantItemOfAhp = new AHPItem(\r\n          FuzzyMiddleman.getTransformed(variantRate, 100),\r\n          decisionMaker.getVariantItems()\r\n        );\r\n\r\n        variantItemOfAhp.initProcess();\r\n        metadata[\"variantsRank\"][criteriaItem] = variantItemOfAhp.getMetadata();\r\n      }\r\n\r\n      const itemOfAhp = new AHPItem(\r\n        FuzzyMiddleman.getTransformed(decisionMaker.getCriteriaRates(), 100),\r\n        decisionMaker.criteriaItems\r\n      );\r\n\r\n      itemOfAhp.initProcess();\r\n      metadata[\"criteriasRank\"] = itemOfAhp.getMetadata();\r\n      metadata[\"finalRank\"] = {};\r\n\r\n      for (const variantItem of decisionMaker.variantItems) {\r\n        let sum = 0;\r\n\r\n        for (const criteriaItem of decisionMaker.criteriaItems) {\r\n          let varRank = metadata.variantsRank[\r\n            criteriaItem\r\n          ].weights.filter((item) => Object.keys(item).includes(variantItem));\r\n          varRank = Object.values(varRank[0])[0];\r\n\r\n          let criRank = metadata.criteriasRank.weights.filter((item) =>\r\n            Object.keys(item).includes(criteriaItem)\r\n          );\r\n\r\n          criRank = Object.values(criRank[0])[0];\r\n\r\n          sum += varRank * criRank;\r\n        }\r\n\r\n        metadata[\"finalRank\"][variantItem] = sum;\r\n        metadata[\"expert\"] = props.expertName;\r\n        setUserMetadata(metadata);\r\n      }\r\n    };\r\n\r\n    React.useEffect(() => {\r\n      if (!_.isEmpty(props.variantsSliders)) initRanking();\r\n    }, [props.variantsSliders]);\r\n\r\n    if (!_.isEmpty(props.variantsSliders) || !_.isEmpty(props.criteriasSliders))\r\n      return <WrappedComponent {...props} metadata={userMetadata} />;\r\n    else\r\n      return (\r\n        <Grid style={{ height: \"50vh\" }} container component={Paper}>\r\n          <Typography\r\n            variant=\"h4\"\r\n            style={{ margin: \"auto auto\", opacity: \"30%\", width: \"50%\" }}\r\n          >\r\n            Nie można osiągnąć żądanego wejścia. Najpierw oceń preferencję lub\r\n            zainicjalizuj proces AHP.\r\n          </Typography>\r\n        </Grid>\r\n      );\r\n  });\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return state;\r\n};\r\n\r\nexport default withRanking;\r\n","C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\components\\Comparisons\\hoc\\withComparisons.js",["113"],"import React from \"react\";\r\nimport {\r\n  Button,\r\n  Paper,\r\n  makeStyles,\r\n  Typography,\r\n  Divider,\r\n} from \"@material-ui/core\";\r\nimport _ from \"lodash\";\r\n\r\nconst pairs = (arr) => {\r\n  const pairs = [];\r\n  for (let i = 0; i < arr.length; i++) {\r\n    for (let j = i + 1; j < arr.length; j++) {\r\n      pairs.push([arr[i], arr[j]]);\r\n    }\r\n  }\r\n  return pairs;\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    padding: \"2.5em\",\r\n    justifyContent: \"center\",\r\n  },\r\n  header: {\r\n    textAlign: \"center\",\r\n    fontSize: \"1.15em\",\r\n    display: \"block\",\r\n    width: \"100%\",\r\n  },\r\n}));\r\n\r\nconst withComparisons = (WrappedComponent) => {\r\n  return (props) => {\r\n    const classes = useStyles();\r\n\r\n    if (props.criterias) {\r\n      const componentsList = props.criterias.map((criteria) => {\r\n        return (\r\n          <Paper className={classes.root} key={criteria}>\r\n            <Typography className={classes.header} variant=\"caption\">\r\n              Oceń preferencję w oparciu o:{\" \"}\r\n              <Button\r\n                variant=\"contained\"\r\n                disableElevation\r\n                disableFocusRipple\r\n                size=\"small\"\r\n                style={{ cursor: \"default\" }}\r\n              >\r\n                {criteria}\r\n              </Button>\r\n            </Typography>\r\n            <Divider style={{ marginTop: \"1em\" }} />\r\n            <WrappedComponent\r\n              {...props}\r\n              pairs={pairs(props.items)}\r\n              criteria={criteria}\r\n            />\r\n          </Paper>\r\n        );\r\n      });\r\n\r\n      return <div>{componentsList}</div>;\r\n    } else {\r\n      return (\r\n        <Paper className={classes.root}>\r\n          <Typography className={classes.header} variant=\"caption\">\r\n            Oceń preferencję:\r\n          </Typography>\r\n          <WrappedComponent {...props} pairs={pairs(props.items)} />\r\n        </Paper>\r\n      );\r\n    }\r\n  };\r\n};\r\n\r\nexport default withComparisons;\r\n","C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\components\\Sliders\\MultiSlider.js",[],"C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\components\\Sliders\\hoc\\withSlider.js",["114","115","116","117"],"import React from \"react\";\r\nimport { makeStyles, Divider } from \"@material-ui/core\";\r\nimport { updateCriteriaSlider, updateVariantSlider } from \"../../../actions\";\r\nimport { connect } from \"react-redux\";\r\nimport cloneDeep from \"lodash.clonedeep\";\r\n\r\nconst CustomDivider = () => {\r\n  return <Divider style={{ opacity: \"0.8\" }} variant=\"fullWidth\"></Divider>;\r\n};\r\n\r\nconst isEmptyObject = (obj) => {\r\n  if (obj === undefined) return true;\r\n  return Object.entries(obj).length === 0 ? true : false;\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: \"0em auto\",\r\n    opacity: \"0.65\",\r\n    filter: \"blur(1px)\",\r\n    padding: \"1.5em\",\r\n    transition: \"0.15s opacity, 0.2s filter, 0.1s background-color\",\r\n    width: \"50%\",\r\n    \"&:nth-child(1)\": {\r\n      marginTop: \"2em\",\r\n    },\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      width: \"100%\",\r\n      opacity: \"1\",\r\n      filter: \"blur(0px)\",\r\n      \"&:nth-child(1)\": {\r\n        marginTop: \"5em\",\r\n      },\r\n    },\r\n    \"&:hover\": {\r\n      opacity: \"1\",\r\n      filter: \"blur(0px)\",\r\n      backgroundColor: \"rgba(0,0,0,0.01)\",\r\n    },\r\n    \"&:active\": {\r\n      backgroundColor: \"rgba(0,0,0,0.02)\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst withSlider = (WrappedComponent, settings) => {\r\n  const initValue = [-1, 0, 1];\r\n\r\n  return connect(mapStateToProps, {\r\n    updateCriteriaSlider,\r\n    updateVariantSlider,\r\n  })((props) => {\r\n    const classes = useStyles();\r\n    const wasSliderInitialized = props.savedValue === undefined ? false : true;\r\n    const [value, setValue] = React.useState(\r\n      wasSliderInitialized ? props.savedValue : [-1, 0, 1]\r\n    );\r\n    const [min, max] = [-8, 8];\r\n    const valueRef = React.useRef();\r\n\r\n    React.useEffect(() => {\r\n      valueRef.current = value;\r\n    }, [value]);\r\n\r\n    React.useEffect(() => {\r\n      const {\r\n        criteria,\r\n        leftComp,\r\n        rightComp,\r\n        updateCriteriaSlider,\r\n        updateVariantSlider,\r\n      } = props;\r\n      const isCriteriaPresent = criteria === undefined ? false : true;\r\n\r\n      return () => {\r\n        if (isCriteriaPresent)\r\n          updateVariantSlider(criteria, leftComp, rightComp, valueRef.current);\r\n        else {\r\n          updateCriteriaSlider(leftComp, rightComp, valueRef.current);\r\n        }\r\n      };\r\n    }, []);\r\n\r\n    const handleChange = (e, newValue) => {\r\n      setValue(newValue);\r\n    };\r\n\r\n    const marks = [\r\n      {\r\n        value: min,\r\n        label: props.leftComp,\r\n      },\r\n      {\r\n        value: max,\r\n        label: props.rightComp,\r\n      },\r\n    ];\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <CustomDivider />\r\n        <WrappedComponent\r\n          {...props}\r\n          handleChange={handleChange}\r\n          value={value}\r\n          marks={marks}\r\n          min={min}\r\n          max={max}\r\n        />\r\n        <CustomDivider />\r\n      </div>\r\n    );\r\n  });\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const { leftComp, rightComp, criteria } = ownProps;\r\n  const wasInitialized = criteria\r\n    ? state.variantsSliders[criteria]\r\n      ? true\r\n      : false\r\n    : true;\r\n  const comp = `${leftComp}:${rightComp}`;\r\n  const savedValue = wasInitialized\r\n    ? criteria\r\n      ? state.variantsSliders[criteria][comp]\r\n      : state.criteriasSliders[comp]\r\n    : undefined;\r\n\r\n  return {\r\n    savedValue: savedValue,\r\n  };\r\n};\r\n\r\nexport default withSlider;\r\n","C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\ahpLogic\\index.js",[],"C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\components\\Experts\\Experts.js",[],"C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\components\\Experts\\ExpertsAccordion.js",["118","119"],"import React from \"react\";\r\nimport {\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  Typography,\r\n  Grid,\r\n  Paper,\r\n} from \"@material-ui/core\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport TwoColumnTable from \"../Ranking/TwoColumnTable\";\r\n\r\nconst mergeObjects = (arrObj) => Object.assign({}, ...arrObj);\r\n\r\nexport default function SimpleAccordion({ expertsData }) {\r\n  const accordions = expertsData.map((data) => {\r\n    return (\r\n      <Grid\r\n        key={data.expert}\r\n        item\r\n        xs={12}\r\n        md={expertsData.length <= 1 ? 12 : expertsData.length === 2 ? 6 : 4}\r\n      >\r\n        <Accordion square>\r\n          <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n            <Typography>{data.expert}</Typography>\r\n          </AccordionSummary>\r\n\r\n          <AccordionDetails>\r\n            <TwoColumnTable\r\n              items={data.finalRank}\r\n              type=\"variants\"\r\n            ></TwoColumnTable>\r\n          </AccordionDetails>\r\n        </Accordion>\r\n      </Grid>\r\n    );\r\n  });\r\n\r\n  return <Grid container>{accordions}</Grid>;\r\n}\r\n","C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\components\\Ranking\\TwoColumnTable.js",[],"C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\components\\Ranking\\Chart.js",["120","121","122","123"],"import React, { PureComponent } from \"react\";\r\nimport { Typography, makeStyles } from \"@material-ui/core\";\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  Cell,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst useStyles = makeStyles({});\r\n\r\nconst convertData = (data) => {\r\n  return { name: data[0], weight: data[1] };\r\n};\r\n\r\nconst Chart = (props) => {\r\n  const [data, setData] = React.useState([]);\r\n  const classes = useStyles();\r\n\r\n  React.useEffect(() => {\r\n    if (props.data) {\r\n      const dataArr = [];\r\n\r\n      for (const node of props.data) {\r\n        dataArr.push(convertData(node));\r\n      }\r\n\r\n      setData(dataArr);\r\n    }\r\n  }, [props.data]);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        width: \"100%\",\r\n        height: 350,\r\n        padding: \"1em\",\r\n      }}\r\n    >\r\n      {props.showText === true ? (\r\n        <Typography\r\n          style={{ position: \"absolute\", alignSelf: \"center\" }}\r\n          variant=\"overline\"\r\n        >\r\n          Cel: {props.goal}\r\n        </Typography>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      <ResponsiveContainer>\r\n        <BarChart\r\n          data={data}\r\n          margin={{\r\n            top: 35,\r\n            right: 5,\r\n            left: 5,\r\n            bottom: 5,\r\n          }}\r\n          barSize={30}\r\n        >\r\n          <XAxis dataKey=\"name\" />\r\n          <YAxis />\r\n          <Tooltip\r\n            cursor={{\r\n              stroke: \"black\",\r\n              strokeWidth: 1,\r\n              opacity: \"0.1\",\r\n            }}\r\n          />\r\n          <Legend />\r\n          <Bar dataKey=\"weight\" name={props.label} fill={props.color} />\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return state;\r\n};\r\n\r\nexport default connect(mapStateToProps)(Chart);\r\n",{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","severity":1,"message":"129","line":44,"column":10,"nodeType":"130","messageId":"131","endLine":44,"endColumn":14},{"ruleId":"132","severity":1,"message":"133","line":102,"column":3,"nodeType":"134","endLine":102,"endColumn":18,"suggestions":"135"},{"ruleId":"128","severity":1,"message":"136","line":125,"column":9,"nodeType":"130","messageId":"131","endLine":125,"endColumn":21},{"ruleId":"132","severity":1,"message":"137","line":31,"column":6,"nodeType":"138","endLine":31,"endColumn":8,"suggestions":"139"},{"ruleId":"132","severity":1,"message":"140","line":54,"column":6,"nodeType":"138","endLine":54,"endColumn":22,"suggestions":"141"},{"ruleId":"142","severity":1,"message":"143","line":60,"column":30,"nodeType":"144","messageId":"145","endLine":60,"endColumn":32},{"ruleId":"128","severity":1,"message":"146","line":87,"column":9,"nodeType":"130","messageId":"131","endLine":87,"endColumn":20},{"ruleId":"128","severity":1,"message":"147","line":9,"column":10,"nodeType":"130","messageId":"131","endLine":9,"endColumn":16},{"ruleId":"128","severity":1,"message":"148","line":3,"column":10,"nodeType":"130","messageId":"131","endLine":3,"endColumn":16},{"ruleId":"142","severity":1,"message":"143","line":11,"column":30,"nodeType":"144","messageId":"145","endLine":11,"endColumn":32},{"ruleId":"132","severity":1,"message":"149","line":73,"column":8,"nodeType":"138","endLine":73,"endColumn":31,"suggestions":"150"},{"ruleId":"128","severity":1,"message":"151","line":9,"column":8,"nodeType":"130","messageId":"131","endLine":9,"endColumn":9},{"ruleId":"128","severity":1,"message":"152","line":5,"column":8,"nodeType":"130","messageId":"131","endLine":5,"endColumn":17},{"ruleId":"128","severity":1,"message":"153","line":11,"column":7,"nodeType":"130","messageId":"131","endLine":11,"endColumn":20},{"ruleId":"128","severity":1,"message":"154","line":47,"column":9,"nodeType":"130","messageId":"131","endLine":47,"endColumn":18},{"ruleId":"132","severity":1,"message":"155","line":82,"column":8,"nodeType":"138","endLine":82,"endColumn":10,"suggestions":"156"},{"ruleId":"128","severity":1,"message":"157","line":8,"column":3,"nodeType":"130","messageId":"131","endLine":8,"endColumn":8},{"ruleId":"128","severity":1,"message":"158","line":13,"column":7,"nodeType":"130","messageId":"131","endLine":13,"endColumn":19},{"ruleId":"128","severity":1,"message":"159","line":1,"column":17,"nodeType":"130","messageId":"131","endLine":1,"endColumn":30},{"ruleId":"128","severity":1,"message":"160","line":6,"column":3,"nodeType":"130","messageId":"131","endLine":6,"endColumn":7},{"ruleId":"128","severity":1,"message":"161","line":9,"column":3,"nodeType":"130","messageId":"131","endLine":9,"endColumn":16},{"ruleId":"128","severity":1,"message":"162","line":24,"column":9,"nodeType":"130","messageId":"131","endLine":24,"endColumn":16},"no-native-reassign",["163"],"no-negated-in-lhs",["164"],"no-unused-vars","'init' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setTabsVariant'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [matches] as a second argument to the useEffect Hook.","MemberExpression",["165"],"'routeHandler' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'props.criteria', 'props.pairs', and 'props.update'. Either include them or remove the dependency array.","ArrayExpression",["166"],"React Hook React.useEffect has a missing dependency: 'finalRank'. Either include it or remove the dependency array.",["167"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'handleClick' is assigned a value but never used.","'Slider' is defined but never used.","'Button' is defined but never used.","React Hook React.useEffect has a missing dependency: 'initRanking'. Either include it or remove the dependency array.",["168"],"'_' is defined but never used.","'cloneDeep' is defined but never used.","'isEmptyObject' is assigned a value but never used.","'initValue' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'props'. Either include it or remove the dependency array.",["169"],"'Paper' is defined but never used.","'mergeObjects' is assigned a value but never used.","'PureComponent' is defined but never used.","'Cell' is defined but never used.","'CartesianGrid' is defined but never used.","'classes' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"170","fix":"171"},{"desc":"172","fix":"173"},{"desc":"174","fix":"175"},{"desc":"176","fix":"177"},{"desc":"178","fix":"179"},"Add dependencies array: [matches]",{"range":"180","text":"181"},"Update the dependencies array to be: [props.criteria, props.pairs, props.update]",{"range":"182","text":"183"},"Update the dependencies array to be: [finalRank, props.metadata]",{"range":"184","text":"185"},"Update the dependencies array to be: [initRanking, props.variantsSliders]",{"range":"186","text":"187"},"Update the dependencies array to be: [props]",{"range":"188","text":"189"},[2887,2887],", [matches]",[841,843],"[props.criteria, props.pairs, props.update]",[1825,1841],"[finalRank, props.metadata]",[2415,2438],"[initRanking, props.variantsSliders]",[2276,2278],"[props]"]