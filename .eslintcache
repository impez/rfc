[{"C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\index.js":"1","C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\App.js":"2","C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\Theme.js":"3","C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\reducers\\index.js":"4","C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\components\\Navigation\\TabPanel.js":"5","C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\components\\Comparisons\\Comparisons.js":"6","C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\components\\Ranking\\Ranking.js":"7","C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\components\\Start\\Start.js":"8","C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\actions\\index.js":"9","C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\components\\Start\\VariantsList.js":"10","C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\components\\Start\\CriteriasList.js":"11","C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\components\\Start\\SimpleAccordion.js":"12","C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\components\\Start\\hoc\\withList.js":"13","C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\components\\Ranking\\hoc\\withRanking.js":"14","C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\components\\Comparisons\\hoc\\withComparisons.js":"15","C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\components\\Sliders\\MultiSlider.js":"16","C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\components\\Sliders\\hoc\\withSlider.js":"17","C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\ahpLogic\\index.js":"18","C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\components\\Ranking\\Chart.js":"19","C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\components\\Ranking\\TwoColumnTable.js":"20","C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\components\\Experts\\Experts.js":"21","C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\components\\Experts\\ExpertsAccordion.js":"22"},{"size":617,"mtime":1607745083364,"results":"23","hashOfConfig":"24"},{"size":4322,"mtime":1608003273096,"results":"25","hashOfConfig":"24"},{"size":533,"mtime":1607745083355,"results":"26","hashOfConfig":"24"},{"size":2715,"mtime":1608000974225,"results":"27","hashOfConfig":"24"},{"size":547,"mtime":1607745083358,"results":"28","hashOfConfig":"24"},{"size":571,"mtime":1607745083357,"results":"29","hashOfConfig":"24"},{"size":3382,"mtime":1608001055581,"results":"30","hashOfConfig":"24"},{"size":4372,"mtime":1608003011273,"results":"31","hashOfConfig":"24"},{"size":1475,"mtime":1608000929991,"results":"32","hashOfConfig":"24"},{"size":1886,"mtime":1607745083362,"results":"33","hashOfConfig":"24"},{"size":1899,"mtime":1607745083361,"results":"34","hashOfConfig":"24"},{"size":2591,"mtime":1607999587450,"results":"35","hashOfConfig":"24"},{"size":947,"mtime":1607745083363,"results":"36","hashOfConfig":"24"},{"size":2402,"mtime":1607943320388,"results":"37","hashOfConfig":"24"},{"size":2305,"mtime":1607757163449,"results":"38","hashOfConfig":"24"},{"size":587,"mtime":1607938021358,"results":"39","hashOfConfig":"24"},{"size":2863,"mtime":1607757286916,"results":"40","hashOfConfig":"24"},{"size":7200,"mtime":1607745083356,"results":"41","hashOfConfig":"24"},{"size":1797,"mtime":1607948245849,"results":"42","hashOfConfig":"24"},{"size":2974,"mtime":1607946640025,"results":"43","hashOfConfig":"24"},{"size":1363,"mtime":1608001023165,"results":"44","hashOfConfig":"24"},{"size":1064,"mtime":1608003383882,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1clfxry",{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\index.js",[],["95","96"],"C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\App.js",["97"],"C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\Theme.js",[],"C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\reducers\\index.js",[],"C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\components\\Navigation\\TabPanel.js",[],"C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\components\\Comparisons\\Comparisons.js",[],"C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\components\\Ranking\\Ranking.js",["98"],"import React from \"react\";\r\nimport withRanking from \"./hoc/withRanking\";\r\nimport TwoColumnTable from \"./TwoColumnTable\";\r\nimport Chart from \"./Chart\";\r\nimport { Grid, Paper, Button } from \"@material-ui/core\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  setRoute,\r\n  updateExpertName,\r\n  resetSliders,\r\n  addExpertMetadata,\r\n} from \"../../actions\";\r\n\r\nconst mergeObjects = (arrObj) => Object.assign({}, ...arrObj);\r\n\r\nconst Ranking = (props) => {\r\n  const [criteriaWeights, setCriteriaWeights] = React.useState([]);\r\n  const [variantWeights, setVariantWeights] = React.useState([]);\r\n  const [\r\n    variantConsistencyRatios,\r\n    setVariantConsistencyRatios,\r\n  ] = React.useState([]);\r\n  const [allRanks, setAllRanks] = React.useState([]);\r\n  const [crEntries, setCrEntries] = React.useState([]);\r\n\r\n  const { finalRank } = props.metadata;\r\n\r\n  const handleSave = () => {\r\n    props.setRoute(\"decydenci\");\r\n    props.addExpertMetadata(props.metadata);\r\n    props.updateExpertName(`Decydent-${props.expertsGroup.length + 2}`);\r\n    props.resetSliders();\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (props.metadata.criteriasRank !== undefined) {\r\n      const criteriaRankWeights = props.metadata.criteriasRank.weights;\r\n      const variantConsistencyRatios = [];\r\n      const variantRanks = props.metadata.variantsRank;\r\n\r\n      for (const [variant, obj] of Object.entries(variantRanks)) {\r\n        variantConsistencyRatios.push({ [variant]: obj.consistencyRatio });\r\n      }\r\n      variantConsistencyRatios.push({\r\n        \"*\": props.metadata.criteriasRank.consistencyRatio,\r\n      });\r\n\r\n      setCriteriaWeights(mergeObjects(criteriaRankWeights));\r\n      setVariantWeights(finalRank);\r\n      setVariantConsistencyRatios(mergeObjects(variantConsistencyRatios));\r\n    }\r\n  }, [props.metadata]);\r\n\r\n  React.useEffect(() => {\r\n    const varEntries = Object.entries(variantWeights);\r\n    const critEntries = Object.entries(criteriaWeights);\r\n    const allEntries = [...varEntries, ...critEntries];\r\n    setCrEntries(Object.entries(variantConsistencyRatios));\r\n    setAllRanks(allEntries);\r\n  }, [criteriaWeights, variantWeights, variantConsistencyRatios]);\r\n\r\n  return (\r\n    <Grid container component={Paper} justify=\"center\" alignItems=\"center\">\r\n      <Grid item xs={6} style={{ paddingTop: \"1em\" }}>\r\n        <Button\r\n          onClick={handleSave}\r\n          style={{ width: \"100%\" }}\r\n          variant=\"outlined\"\r\n        >\r\n          zapisz\r\n        </Button>\r\n      </Grid>\r\n      <Grid item md={8} xs={12}>\r\n        <Chart data={allRanks} label=\"Waga\" color=\"#a68324\" showText />\r\n      </Grid>\r\n      <Grid item md={4} xs={12}>\r\n        <TwoColumnTable type=\"variants\" items={variantWeights} />\r\n      </Grid>\r\n      <Grid item md={8} xs={12}>\r\n        <Chart\r\n          data={crEntries}\r\n          label=\"Współczynnik spójności\"\r\n          color=\"#917836\"\r\n        />\r\n      </Grid>\r\n      <Grid item md={4} xs={12}>\r\n        <TwoColumnTable type=\"variants_crs\" items={variantConsistencyRatios} />\r\n      </Grid>\r\n      <Grid item md={12} xs={12}>\r\n        <TwoColumnTable type=\"criterias\" items={criteriaWeights} />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return state;\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  setRoute,\r\n  updateExpertName,\r\n  addExpertMetadata,\r\n  resetSliders,\r\n})(withRanking(Ranking));\r\n","C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\components\\Start\\Start.js",[],"C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\actions\\index.js",[],"C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\components\\Start\\VariantsList.js",[],"C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\components\\Start\\CriteriasList.js",[],"C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\components\\Start\\SimpleAccordion.js",[],"C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\components\\Start\\hoc\\withList.js",[],"C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\components\\Ranking\\hoc\\withRanking.js",["99"],"import React from \"react\";\r\nimport { AHPUser, AHPItem, FuzzyMiddleman } from \"../../../ahpLogic\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst withRanking = (WrappedComponent) => {\r\n  let decisionMaker;\r\n\r\n  return connect(mapStateToProps)((props) => {\r\n    const [userMetadata, setUserMetadata] = React.useState({});\r\n\r\n    const { criterias, variants, criteriasSliders, variantsSliders } = props;\r\n\r\n    React.useEffect(() => {\r\n      const metadata = { criteriasRank: {}, variantsRank: {} };\r\n\r\n      decisionMaker = new AHPUser({\r\n        criteriaItems: criterias,\r\n        variantItems: variants,\r\n        criteriaRates: criteriasSliders,\r\n        variantRates: variantsSliders,\r\n      });\r\n\r\n      for (const criteriaItem of decisionMaker.criteriaItems) {\r\n        const rate = decisionMaker.getVariantRates();\r\n        const variantRate = rate[criteriaItem];\r\n        const variantItemOfAhp = new AHPItem(\r\n          FuzzyMiddleman.getTransformed(variantRate, 100),\r\n          decisionMaker.getVariantItems()\r\n        );\r\n\r\n        variantItemOfAhp.initProcess();\r\n        metadata[\"variantsRank\"][criteriaItem] = variantItemOfAhp.getMetadata();\r\n      }\r\n\r\n      const itemOfAhp = new AHPItem(\r\n        FuzzyMiddleman.getTransformed(decisionMaker.getCriteriaRates(), 100),\r\n        decisionMaker.criteriaItems\r\n      );\r\n\r\n      itemOfAhp.initProcess();\r\n      metadata[\"criteriasRank\"] = itemOfAhp.getMetadata();\r\n      metadata[\"finalRank\"] = {};\r\n\r\n      for (const variantItem of decisionMaker.variantItems) {\r\n        let sum = 0;\r\n\r\n        for (const criteriaItem of decisionMaker.criteriaItems) {\r\n          let varRank = metadata.variantsRank[\r\n            criteriaItem\r\n          ].weights.filter((item) => Object.keys(item).includes(variantItem));\r\n          varRank = Object.values(varRank[0])[0];\r\n\r\n          let criRank = metadata.criteriasRank.weights.filter((item) =>\r\n            Object.keys(item).includes(criteriaItem)\r\n          );\r\n\r\n          criRank = Object.values(criRank[0])[0];\r\n\r\n          sum += varRank * criRank;\r\n        }\r\n\r\n        metadata[\"finalRank\"][variantItem] = sum;\r\n        metadata[\"expert\"] = props.expertName;\r\n        setUserMetadata(metadata);\r\n      }\r\n    }, []);\r\n\r\n    return <WrappedComponent {...props} metadata={userMetadata} />;\r\n  });\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return state;\r\n};\r\n\r\nexport default withRanking;\r\n","C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\components\\Comparisons\\hoc\\withComparisons.js",[],"C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\components\\Sliders\\MultiSlider.js",[],"C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\components\\Sliders\\hoc\\withSlider.js",["100","101"],"import React from \"react\";\r\nimport { makeStyles, Divider } from \"@material-ui/core\";\r\nimport { updateCriteriaSlider, updateVariantSlider } from \"../../../actions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst CustomDivider = () => {\r\n  return <Divider style={{ opacity: \"0.8\" }} variant=\"fullWidth\"></Divider>\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: \"2.5em auto\",\r\n    opacity: \"0.75\",\r\n    transition: \"0.15s opacity, 0.2s filter, 0.1s background-color\",\r\n    width: \"55%\",\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      width: \"100%\",\r\n      opacity: \"1\",\r\n      filter: \"blur(0px)\",\r\n    },\r\n    \"&:hover\": {\r\n      opacity: \"1\",\r\n      filter: \"blur(0px)\",\r\n      backgroundColor: \"rgba(0,0,0,0.01)\",\r\n    },\r\n    \"&:active\": {\r\n      backgroundColor: \"rgba(0,0,0,0.02)\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst withSlider = (WrappedComponent, settings) => {\r\n  const initValue = [-1, 0, 1];\r\n\r\n  return connect(mapStateToProps, {\r\n    updateCriteriaSlider,\r\n    updateVariantSlider,\r\n  })((props) => {\r\n    const classes = useStyles();\r\n    const isCriteriaPresent = props.criteria ? true : false;\r\n    const [value, setValue] = React.useState(\r\n      isCriteriaPresent\r\n        ? props.variantsSliders[props.criteria] === undefined\r\n          ? [-1, 0, 1]\r\n          : props.variantsSliders[props.criteria][\r\n              `${props.leftComp}:${props.rightComp}`\r\n            ]\r\n        : Object.keys(props.criteriasSliders).length === 0\r\n        ? [-1, 0, 1]\r\n        : props.criteriasSliders[`${props.leftComp}:${props.rightComp}`]\r\n    );\r\n    const [min, max] = [-8, 8];\r\n\r\n    const marks = [\r\n      {\r\n        value: min,\r\n        label: props.leftComp,\r\n      },\r\n      {\r\n        value: max,\r\n        label: props.rightComp,\r\n      },\r\n    ];\r\n\r\n    React.useEffect(() => {\r\n      if (isCriteriaPresent)\r\n        props.updateVariantSlider(\r\n          props.criteria,\r\n          props.leftComp,\r\n          props.rightComp,\r\n          value\r\n        );\r\n      else props.updateCriteriaSlider(props.leftComp, props.rightComp, value);\r\n    }, []);\r\n\r\n    const handleChange = (e, newValue) => {\r\n      setValue(newValue);\r\n\r\n      if (isCriteriaPresent)\r\n        props.updateVariantSlider(\r\n          props.criteria,\r\n          props.leftComp,\r\n          props.rightComp,\r\n          newValue\r\n        );\r\n      else\r\n        props.updateCriteriaSlider(props.leftComp, props.rightComp, newValue);\r\n    };\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <CustomDivider />\r\n        <WrappedComponent\r\n          {...props}\r\n          handleChange={handleChange}\r\n          value={value}\r\n          marks={marks}\r\n          min={min}\r\n          max={max}\r\n        />\r\n        <CustomDivider />\r\n      </div>\r\n    );\r\n  });\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return state;\r\n};\r\n\r\nexport default withSlider;\r\n","C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\ahpLogic\\index.js",[],"C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\components\\Ranking\\Chart.js",["102","103","104"],"import React, { PureComponent } from \"react\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  Cell,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst convertData = (data) => {\r\n  return { name: data[0], weight: data[1] };\r\n};\r\n\r\nconst Chart = (props) => {\r\n  const [data, setData] = React.useState([]);\r\n  const jsfiddleUrl = \"https://jsfiddle.net/alidingling/30763kr7/\";\r\n\r\n  React.useEffect(() => {\r\n    if (props.data) {\r\n      const dataArr = [];\r\n\r\n      for (const node of props.data) {\r\n        dataArr.push(convertData(node));\r\n      }\r\n\r\n      setData(dataArr);\r\n    }\r\n  }, [props.data]);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        width: \"100%\",\r\n        height: 350,\r\n        padding: \"1em\",\r\n      }}\r\n    >\r\n      {props.showText === true ? (\r\n        <Typography\r\n          style={{ position: \"absolute\", alignSelf: \"center\" }}\r\n          variant=\"overline\"\r\n        >\r\n          Cel: {props.goal}\r\n        </Typography>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      <ResponsiveContainer>\r\n        <BarChart\r\n          data={data}\r\n          margin={{\r\n            top: 35,\r\n            right: 5,\r\n            left: 5,\r\n            bottom: 5,\r\n          }}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"2 4\" />\r\n          <XAxis dataKey=\"name\" />\r\n          <YAxis />\r\n          <Tooltip />\r\n          <Legend />\r\n          <Bar dataKey=\"weight\" name={props.label} fill={props.color} />\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return state;\r\n};\r\n\r\nexport default connect(mapStateToProps)(Chart);\r\n","C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\components\\Ranking\\TwoColumnTable.js",[],"C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\components\\Experts\\Experts.js",[],"C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\components\\Experts\\ExpertsAccordion.js",["105","106"],{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","severity":1,"message":"112","line":87,"column":3,"nodeType":"113","endLine":87,"endColumn":18,"suggestions":"114"},{"ruleId":"111","severity":1,"message":"115","line":52,"column":6,"nodeType":"116","endLine":52,"endColumn":22,"suggestions":"117"},{"ruleId":"111","severity":1,"message":"118","line":66,"column":8,"nodeType":"116","endLine":66,"endColumn":10,"suggestions":"119"},{"ruleId":"120","severity":1,"message":"121","line":33,"column":9,"nodeType":"122","messageId":"123","endLine":33,"endColumn":18},{"ruleId":"111","severity":1,"message":"124","line":74,"column":8,"nodeType":"116","endLine":74,"endColumn":10,"suggestions":"125"},{"ruleId":"120","severity":1,"message":"126","line":1,"column":17,"nodeType":"122","messageId":"123","endLine":1,"endColumn":30},{"ruleId":"120","severity":1,"message":"127","line":6,"column":3,"nodeType":"122","messageId":"123","endLine":6,"endColumn":7},{"ruleId":"120","severity":1,"message":"128","line":22,"column":9,"nodeType":"122","messageId":"123","endLine":22,"endColumn":20},{"ruleId":"120","severity":1,"message":"129","line":8,"column":3,"nodeType":"122","messageId":"123","endLine":8,"endColumn":8},{"ruleId":"120","severity":1,"message":"130","line":13,"column":7,"nodeType":"122","messageId":"123","endLine":13,"endColumn":19},"no-native-reassign",["131"],"no-negated-in-lhs",["132"],"react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setTabsVariant'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [matches] as a second argument to the useEffect Hook.","MemberExpression",["133"],"React Hook React.useEffect has a missing dependency: 'finalRank'. Either include it or remove the dependency array.","ArrayExpression",["134"],"React Hook React.useEffect has missing dependencies: 'criterias', 'criteriasSliders', 'props.expertName', 'variants', and 'variantsSliders'. Either include them or remove the dependency array.",["135"],"no-unused-vars","'initValue' is assigned a value but never used.","Identifier","unusedVar","React Hook React.useEffect has missing dependencies: 'isCriteriaPresent', 'props', and 'value'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside React.useEffect.",["136"],"'PureComponent' is defined but never used.","'Cell' is defined but never used.","'jsfiddleUrl' is assigned a value but never used.","'Paper' is defined but never used.","'mergeObjects' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"137","fix":"138"},{"desc":"139","fix":"140"},{"desc":"141","fix":"142"},{"desc":"143","fix":"144"},"Add dependencies array: [matches]",{"range":"145","text":"146"},"Update the dependencies array to be: [finalRank, props.metadata]",{"range":"147","text":"148"},"Update the dependencies array to be: [criterias, criteriasSliders, props.expertName, variants, variantsSliders]",{"range":"149","text":"150"},"Update the dependencies array to be: [isCriteriaPresent, props, value]",{"range":"151","text":"152"},[2646,2646],", [matches]",[1783,1799],"[finalRank, props.metadata]",[2222,2224],"[criterias, criteriasSliders, props.expertName, variants, variantsSliders]",[2077,2079],"[isCriteriaPresent, props, value]"]