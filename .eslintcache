[{"C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\index.js":"1","C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\App.js":"2","C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\Theme.js":"3","C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\reducers\\index.js":"4","C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\components\\Navigation\\TabPanel.js":"5","C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\components\\Comparisons\\Comparisons.js":"6","C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\components\\Ranking\\Ranking.js":"7","C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\components\\Start\\Start.js":"8","C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\actions\\index.js":"9","C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\components\\Start\\VariantsList.js":"10","C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\components\\Start\\CriteriasList.js":"11","C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\components\\Start\\SimpleAccordion.js":"12","C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\components\\Start\\hoc\\withList.js":"13","C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\components\\Ranking\\hoc\\withRanking.js":"14","C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\components\\Comparisons\\hoc\\withComparisons.js":"15","C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\components\\Sliders\\MultiSlider.js":"16","C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\components\\Sliders\\hoc\\withSlider.js":"17","C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\ahpLogic\\index.js":"18","C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\components\\Ranking\\Chart.js":"19","C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\components\\Ranking\\TwoColumnTable.js":"20","C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\components\\Experts\\Experts.js":"21","C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\components\\Experts\\ExpertsAccordion.js":"22"},{"size":617,"mtime":1607745083364,"results":"23","hashOfConfig":"24"},{"size":4993,"mtime":1608022512227,"results":"25","hashOfConfig":"24"},{"size":533,"mtime":1607745083355,"results":"26","hashOfConfig":"24"},{"size":2715,"mtime":1608000974225,"results":"27","hashOfConfig":"24"},{"size":547,"mtime":1607745083358,"results":"28","hashOfConfig":"24"},{"size":1012,"mtime":1608076057418,"results":"29","hashOfConfig":"24"},{"size":3382,"mtime":1608001055581,"results":"30","hashOfConfig":"24"},{"size":5656,"mtime":1608022522369,"results":"31","hashOfConfig":"24"},{"size":1475,"mtime":1608000929991,"results":"32","hashOfConfig":"24"},{"size":1886,"mtime":1607745083362,"results":"33","hashOfConfig":"24"},{"size":1899,"mtime":1608015623649,"results":"34","hashOfConfig":"24"},{"size":2148,"mtime":1608020304251,"results":"35","hashOfConfig":"24"},{"size":2478,"mtime":1608016975535,"results":"36","hashOfConfig":"24"},{"size":2402,"mtime":1607943320388,"results":"37","hashOfConfig":"24"},{"size":2073,"mtime":1608075668493,"results":"38","hashOfConfig":"24"},{"size":616,"mtime":1608075520234,"results":"39","hashOfConfig":"24"},{"size":3030,"mtime":1608076165884,"results":"40","hashOfConfig":"24"},{"size":7200,"mtime":1607745083356,"results":"41","hashOfConfig":"24"},{"size":1797,"mtime":1607948245849,"results":"42","hashOfConfig":"24"},{"size":2974,"mtime":1607946640025,"results":"43","hashOfConfig":"24"},{"size":1363,"mtime":1608001023165,"results":"44","hashOfConfig":"24"},{"size":1095,"mtime":1608010009629,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1clfxry",{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"48"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"48"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"48"},"C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\index.js",[],["98","99"],"C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\App.js",["100"],"import React from \"react\";\r\nimport {\r\n  AppBar,\r\n  Button,\r\n  Tab,\r\n  Tabs,\r\n  useMediaQuery,\r\n  makeStyles,\r\n  Snackbar,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  PlayArrow as StartIcon,\r\n  TuneTwoTone as ComparisonsIcon,\r\n  EqualizerSharp as RankingIcon,\r\n  GroupSharp as ExpertsIcon,\r\n} from \"@material-ui/icons\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport TabPanel from \"./components/Navigation/TabPanel\";\r\nimport Start from \"./components/Start/Start\";\r\nimport Comparisons from \"./components/Comparisons/Comparisons\";\r\nimport Ranking from \"./components/Ranking/Ranking\";\r\nimport Experts from \"./components/Experts/Experts\";\r\nimport { setRoute } from \"./actions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst menuItems = [\"start\", \"kryteria\", \"warianty\", \"ranking\", \"decydenci\"];\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"standard\" {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  flexContainer: {\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n}));\r\n\r\nconst App = (props) => {\r\n  const { route, setRoute, criterias, variants, expertName } = props;\r\n  const matches = useMediaQuery(\"(min-width:900px)\");\r\n  const classes = useStyles();\r\n\r\n  const [init, setInit] = React.useState(false);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [padding, setPadding] = React.useState(matches ? 3 : 0);\r\n  const [tabsVariant, setTabsVariant] = React.useState(\r\n    matches ? \"fullWidth\" : \"scrollable\"\r\n  );\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  const areSlidersLoaded = () =>\r\n    Object.keys(props.variantsSliders).length === 0 ||\r\n    Object.keys(props.criteriasSliders).length === 0\r\n      ? false\r\n      : true;\r\n\r\n  const setIcon = (label, size) => {\r\n    switch (label) {\r\n      case \"start\":\r\n        return <StartIcon fontSize={size} />;\r\n      case \"warianty\":\r\n      case \"kryteria\":\r\n        return <ComparisonsIcon fontSize={size} />;\r\n      case \"ranking\":\r\n        return <RankingIcon fontSize={size} />;\r\n      case \"decydenci\":\r\n        return <ExpertsIcon fontSize={size} />;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const tabItems = menuItems.map((label) => {\r\n    const isBigDisplay = tabsVariant === \"fullWidth\" ? true : false;\r\n    let disableCb;\r\n\r\n    if (label === \"ranking\") disableCb = !areSlidersLoaded();\r\n\r\n    if (label === \"kryteria\" || label === \"warianty\" || label === \"decydenci\")\r\n      disableCb = !init;\r\n\r\n    if (label === \"start\") disableCb = init;\r\n\r\n    return (\r\n      <Tab\r\n        value={label}\r\n        label={isBigDisplay ? label : \"\"}\r\n        key={label}\r\n        disabled={disableCb}\r\n        icon={setIcon(label, isBigDisplay ? \"default\" : \"large\")}\r\n      />\r\n    );\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    const newVariant = matches ? \"fullWidth\" : \"scrollable\";\r\n    const padding = newVariant === \"fullWidth\" ? 3 : 0;\r\n    setTabsVariant(newVariant);\r\n    setPadding(padding);\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    setOpen(true);\r\n  }, [route]);\r\n\r\n  const handleChange = (event, newRoute) => {\r\n    setRoute(newRoute);\r\n  };\r\n\r\n  const initAhp = () => {\r\n    setInit(true);\r\n  };\r\n\r\n  return (\r\n    <div className=\"main\">\r\n      <AppBar position=\"static\">\r\n        <Tabs\r\n          value={route}\r\n          variant=\"scrollable\"\r\n          scrollButtons=\"on\"\r\n          onChange={handleChange}\r\n          classes={classes}\r\n        >\r\n          {tabItems}\r\n        </Tabs>\r\n      </AppBar>\r\n\r\n      <TabPanel value={route} index=\"start\" padding={padding}>\r\n        <Start initCb={initAhp} />\r\n      </TabPanel>\r\n\r\n      <TabPanel value={route} index=\"kryteria\" padding={padding}>\r\n        <Comparisons items={criterias} />\r\n        <Button\r\n          fullWidth\r\n          size=\"large\"\r\n          variant=\"contained\"\r\n          style={{ margin: \"0.5em 0\" }}\r\n          onClick={() => setRoute(\"warianty\")}\r\n        >\r\n          Dalej\r\n        </Button>\r\n\r\n        <Snackbar open={open} autoHideDuration={2000} onClose={handleClose}>\r\n          <Alert onClose={handleClose} severity=\"info\">\r\n            Kontynuacja jako {expertName}\r\n          </Alert>\r\n        </Snackbar>\r\n      </TabPanel>\r\n\r\n      <TabPanel value={route} index=\"warianty\" padding={padding}>\r\n        <Comparisons items={variants} criterias={criterias} />\r\n        <Button\r\n          fullWidth\r\n          size=\"large\"\r\n          variant=\"contained\"\r\n          style={{ margin: \"0.5em 0\" }}\r\n          onClick={() => setRoute(\"ranking\")}\r\n        >\r\n          Zakończ\r\n        </Button>\r\n      </TabPanel>\r\n\r\n      <TabPanel value={route} index=\"ranking\" padding={padding}>\r\n        <Ranking />\r\n      </TabPanel>\r\n\r\n      <TabPanel value={route} index=\"decydenci\" padding={padding}>\r\n        <Experts />\r\n      </TabPanel>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return state;\r\n};\r\n\r\nexport default connect(mapStateToProps, { setRoute })(App);\r\n","C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\Theme.js",[],"C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\reducers\\index.js",[],"C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\components\\Navigation\\TabPanel.js",[],"C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\components\\Comparisons\\Comparisons.js",["101"],"C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\components\\Ranking\\Ranking.js",["102"],"import React from \"react\";\r\nimport withRanking from \"./hoc/withRanking\";\r\nimport TwoColumnTable from \"./TwoColumnTable\";\r\nimport Chart from \"./Chart\";\r\nimport { Grid, Paper, Button } from \"@material-ui/core\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  setRoute,\r\n  updateExpertName,\r\n  resetSliders,\r\n  addExpertMetadata,\r\n} from \"../../actions\";\r\n\r\nconst mergeObjects = (arrObj) => Object.assign({}, ...arrObj);\r\n\r\nconst Ranking = (props) => {\r\n  const [criteriaWeights, setCriteriaWeights] = React.useState([]);\r\n  const [variantWeights, setVariantWeights] = React.useState([]);\r\n  const [\r\n    variantConsistencyRatios,\r\n    setVariantConsistencyRatios,\r\n  ] = React.useState([]);\r\n  const [allRanks, setAllRanks] = React.useState([]);\r\n  const [crEntries, setCrEntries] = React.useState([]);\r\n\r\n  const { finalRank } = props.metadata;\r\n\r\n  const handleSave = () => {\r\n    props.setRoute(\"decydenci\");\r\n    props.addExpertMetadata(props.metadata);\r\n    props.updateExpertName(`Decydent-${props.expertsGroup.length + 2}`);\r\n    props.resetSliders();\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (props.metadata.criteriasRank !== undefined) {\r\n      const criteriaRankWeights = props.metadata.criteriasRank.weights;\r\n      const variantConsistencyRatios = [];\r\n      const variantRanks = props.metadata.variantsRank;\r\n\r\n      for (const [variant, obj] of Object.entries(variantRanks)) {\r\n        variantConsistencyRatios.push({ [variant]: obj.consistencyRatio });\r\n      }\r\n      variantConsistencyRatios.push({\r\n        \"*\": props.metadata.criteriasRank.consistencyRatio,\r\n      });\r\n\r\n      setCriteriaWeights(mergeObjects(criteriaRankWeights));\r\n      setVariantWeights(finalRank);\r\n      setVariantConsistencyRatios(mergeObjects(variantConsistencyRatios));\r\n    }\r\n  }, [props.metadata]);\r\n\r\n  React.useEffect(() => {\r\n    const varEntries = Object.entries(variantWeights);\r\n    const critEntries = Object.entries(criteriaWeights);\r\n    const allEntries = [...varEntries, ...critEntries];\r\n    setCrEntries(Object.entries(variantConsistencyRatios));\r\n    setAllRanks(allEntries);\r\n  }, [criteriaWeights, variantWeights, variantConsistencyRatios]);\r\n\r\n  return (\r\n    <Grid container component={Paper} justify=\"center\" alignItems=\"center\">\r\n      <Grid item xs={6} style={{ paddingTop: \"1em\" }}>\r\n        <Button\r\n          onClick={handleSave}\r\n          style={{ width: \"100%\" }}\r\n          variant=\"outlined\"\r\n        >\r\n          zapisz\r\n        </Button>\r\n      </Grid>\r\n      <Grid item md={8} xs={12}>\r\n        <Chart data={allRanks} label=\"Waga\" color=\"#a68324\" showText />\r\n      </Grid>\r\n      <Grid item md={4} xs={12}>\r\n        <TwoColumnTable type=\"variants\" items={variantWeights} />\r\n      </Grid>\r\n      <Grid item md={8} xs={12}>\r\n        <Chart\r\n          data={crEntries}\r\n          label=\"Współczynnik spójności\"\r\n          color=\"#917836\"\r\n        />\r\n      </Grid>\r\n      <Grid item md={4} xs={12}>\r\n        <TwoColumnTable type=\"variants_crs\" items={variantConsistencyRatios} />\r\n      </Grid>\r\n      <Grid item md={12} xs={12}>\r\n        <TwoColumnTable type=\"criterias\" items={criteriaWeights} />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return state;\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  setRoute,\r\n  updateExpertName,\r\n  addExpertMetadata,\r\n  resetSliders,\r\n})(withRanking(Ranking));\r\n","C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\components\\Start\\Start.js",["103","104"],"import React from \"react\";\r\nimport {\r\n  Stepper,\r\n  Step,\r\n  StepLabel,\r\n  StepContent,\r\n  Button,\r\n  Typography,\r\n  Paper,\r\n  Grid,\r\n  Snackbar,\r\n  TextField,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport SimpleAccordion from \"./SimpleAccordion\";\r\nimport CriteriasList from \"./CriteriasList\";\r\nimport VariantsList from \"./VariantsList\";\r\nimport { connect } from \"react-redux\";\r\nimport { updateGoal, updateExpertName, setRoute } from \"../../actions\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"standard\" {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"90%\",\r\n    margin: \"0 auto\",\r\n  },\r\n  button: {\r\n    marginTop: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  actionsContainer: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  resetContainer: {\r\n    padding: theme.spacing(3),\r\n  },\r\n  stepper: {\r\n    width: \"95%\",\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      width: \"100%\",\r\n    },\r\n  },\r\n}));\r\n\r\nfunction getSteps() {\r\n  return [\"Ustal cel procesu\", \"Dobierz kryteria\", \"Dobierz warianty\"];\r\n}\r\n\r\nfunction isEmptyString(str) {\r\n  if (str.replace(/\\s/g, \"\") == \"\") {\r\n    return true;\r\n  } else return false;\r\n}\r\n\r\nfunction errorMessage(step) {\r\n  switch (step) {\r\n    case 0:\r\n      return \"Cel nie może być pusty\";\r\n\r\n    case 1:\r\n      return \"Wprowadź minimum dwa kryteria\";\r\n\r\n    case 2:\r\n      return \"Wprowadź minimum dwa warianty/opcje\";\r\n\r\n    default:\r\n      break;\r\n  }\r\n}\r\n\r\nfunction Start(props) {\r\n  const classes = useStyles();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const steps = getSteps();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClick = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleGoalChange = (e) => {\r\n    props.updateGoal(e.target.value);\r\n  };\r\n\r\n  const handleTextChange = (e) => {\r\n    props.updateExpertName(e.target.value);\r\n  };\r\n\r\n  function getStepContent(step) {\r\n    switch (step) {\r\n      case 0:\r\n        return (\r\n          <div>\r\n            <TextField\r\n              id=\"standard-basic\"\r\n              label=\"Wpisz cel\"\r\n              value={props.goal}\r\n              onChange={handleGoalChange}\r\n            />\r\n          </div>\r\n        );\r\n      case 1:\r\n        return (\r\n          <div>\r\n            <CriteriasList />\r\n          </div>\r\n        );\r\n      case 2:\r\n        return (\r\n          <div>\r\n            <VariantsList />\r\n          </div>\r\n        );\r\n      default:\r\n        return \"Unknown step\";\r\n    }\r\n  }\r\n\r\n  const handleNext = () => {\r\n    if (activeStep === 0 && isEmptyString(props.goal)) {\r\n      setOpen(true);\r\n    } else if (activeStep === 1 && props.criterias.length < 2) {\r\n      setOpen(true);\r\n    } else if (activeStep === 2 && props.variants.length < 2) {\r\n      setOpen(true);\r\n    } else {\r\n      setOpen(false);\r\n      setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n\r\n      if (activeStep >= 2) {\r\n        props.setRoute(\"kryteria\");\r\n        props.initCb(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  };\r\n\r\n  return (\r\n    <Paper>\r\n      <Grid container>\r\n        <Grid item xs={12} md={6}>\r\n          <div className={classes.root}>\r\n            <Stepper\r\n              className={classes.stepper}\r\n              activeStep={activeStep}\r\n              orientation=\"vertical\"\r\n            >\r\n              {steps.map((label, index) => (\r\n                <Step key={label}>\r\n                  <StepLabel>{label}</StepLabel>\r\n                  <StepContent>\r\n                    <Typography>{getStepContent(index)}</Typography>\r\n                    <div className={classes.actionsContainer}>\r\n                      <div>\r\n                        <Button\r\n                          disabled={activeStep === 0}\r\n                          onClick={handleBack}\r\n                          className={classes.button}\r\n                        >\r\n                          wstecz\r\n                        </Button>\r\n                        <Button\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          onClick={handleNext}\r\n                          className={classes.button}\r\n                        >\r\n                          {activeStep === steps.length - 1\r\n                            ? \"rozpocznij\"\r\n                            : \"dalej\"}\r\n                        </Button>\r\n                      </div>\r\n                    </div>\r\n                  </StepContent>\r\n                </Step>\r\n              ))}\r\n            </Stepper>\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <SimpleAccordion />\r\n        </Grid>\r\n        <Grid item xs={12} md={12}>\r\n          <TextField\r\n            label=\"ID (Opcjonalnie)\"\r\n            size=\"small\"\r\n            onChange={handleTextChange}\r\n            value={props.expertName}\r\n            style={{\r\n              margin: \"1em\",\r\n            }}\r\n            variant=\"filled\"\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Snackbar open={open} autoHideDuration={3000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity=\"error\">\r\n          {errorMessage(activeStep)}\r\n        </Alert>\r\n      </Snackbar>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return state;\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  updateGoal,\r\n  updateExpertName,\r\n  setRoute,\r\n})(Start);\r\n","C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\actions\\index.js",[],"C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\components\\Start\\VariantsList.js",[],"C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\components\\Start\\CriteriasList.js",[],"C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\components\\Start\\SimpleAccordion.js",[],"C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\components\\Start\\hoc\\withList.js",["105","106"],"import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Button, Snackbar } from \"@material-ui/core\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"standard\" {...props} />;\r\n}\r\n\r\nfunction isEmptyString(str) {\r\n  if (str.replace(/\\s/g, \"\") == \"\") {\r\n    return true;\r\n  } else return false;\r\n}\r\n\r\nconst withList = (WrappedComponent, settings) => {\r\n  const [addItem, removeItem] = settings.update;\r\n  const { type } = settings;\r\n\r\n  return connect(mapStateToProps, { addItem, removeItem })((props) => {\r\n    const items = props[type];\r\n    const [text, setText] = React.useState(\"\");\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    function errorMessage(type) {\r\n      switch (type) {\r\n        case \"criterias\":\r\n          if (isEmptyString(text)) return \"Pole nie może być puste\";\r\n          else return \"Takie kryterium już znajduje się na liście\";\r\n\r\n        case \"variants\":\r\n          if (isEmptyString(text)) return \"Pole nie może być puste\";\r\n          else return \"Taki wariant już znajduje się na liście\";\r\n\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n\r\n    const includes = (item, type) =>\r\n      type === \"criterias\"\r\n        ? props.criterias.includes(item)\r\n        : props.variants.includes(item);\r\n\r\n    const onTextChange = (e) => {\r\n      setOpen(false);\r\n      setText(e.target.value);\r\n    };\r\n\r\n    const onItemAdd = () => {\r\n      if (includes(text, type) || isEmptyString(text)) {\r\n        setOpen(true);\r\n      } else {\r\n        props.addItem(text);\r\n        setText(\"\");\r\n      }\r\n    };\r\n\r\n    const onItemRemove = (removedItem) => {\r\n      setOpen(false);\r\n      props.removeItem(removedItem);\r\n    };\r\n\r\n    const handleClose = (event, reason) => {\r\n      if (reason === \"clickaway\") {\r\n        return;\r\n      }\r\n\r\n      setOpen(false);\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <WrappedComponent\r\n          {...props}\r\n          items={items}\r\n          onTextChange={onTextChange}\r\n          onItemAdd={onItemAdd}\r\n          onItemRemove={onItemRemove}\r\n          text={text}\r\n        />\r\n\r\n        <Snackbar open={open} autoHideDuration={2000} onClose={handleClose}>\r\n          <Alert onClose={handleClose} severity=\"error\">\r\n            {errorMessage(type)}\r\n          </Alert>\r\n        </Snackbar>\r\n      </div>\r\n    );\r\n  });\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return state;\r\n};\r\n\r\nexport default withList;\r\n","C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\components\\Ranking\\hoc\\withRanking.js",["107"],"import React from \"react\";\r\nimport { AHPUser, AHPItem, FuzzyMiddleman } from \"../../../ahpLogic\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst withRanking = (WrappedComponent) => {\r\n  let decisionMaker;\r\n\r\n  return connect(mapStateToProps)((props) => {\r\n    const [userMetadata, setUserMetadata] = React.useState({});\r\n\r\n    const { criterias, variants, criteriasSliders, variantsSliders } = props;\r\n\r\n    React.useEffect(() => {\r\n      const metadata = { criteriasRank: {}, variantsRank: {} };\r\n\r\n      decisionMaker = new AHPUser({\r\n        criteriaItems: criterias,\r\n        variantItems: variants,\r\n        criteriaRates: criteriasSliders,\r\n        variantRates: variantsSliders,\r\n      });\r\n\r\n      for (const criteriaItem of decisionMaker.criteriaItems) {\r\n        const rate = decisionMaker.getVariantRates();\r\n        const variantRate = rate[criteriaItem];\r\n        const variantItemOfAhp = new AHPItem(\r\n          FuzzyMiddleman.getTransformed(variantRate, 100),\r\n          decisionMaker.getVariantItems()\r\n        );\r\n\r\n        variantItemOfAhp.initProcess();\r\n        metadata[\"variantsRank\"][criteriaItem] = variantItemOfAhp.getMetadata();\r\n      }\r\n\r\n      const itemOfAhp = new AHPItem(\r\n        FuzzyMiddleman.getTransformed(decisionMaker.getCriteriaRates(), 100),\r\n        decisionMaker.criteriaItems\r\n      );\r\n\r\n      itemOfAhp.initProcess();\r\n      metadata[\"criteriasRank\"] = itemOfAhp.getMetadata();\r\n      metadata[\"finalRank\"] = {};\r\n\r\n      for (const variantItem of decisionMaker.variantItems) {\r\n        let sum = 0;\r\n\r\n        for (const criteriaItem of decisionMaker.criteriaItems) {\r\n          let varRank = metadata.variantsRank[\r\n            criteriaItem\r\n          ].weights.filter((item) => Object.keys(item).includes(variantItem));\r\n          varRank = Object.values(varRank[0])[0];\r\n\r\n          let criRank = metadata.criteriasRank.weights.filter((item) =>\r\n            Object.keys(item).includes(criteriaItem)\r\n          );\r\n\r\n          criRank = Object.values(criRank[0])[0];\r\n\r\n          sum += varRank * criRank;\r\n        }\r\n\r\n        metadata[\"finalRank\"][variantItem] = sum;\r\n        metadata[\"expert\"] = props.expertName;\r\n        setUserMetadata(metadata);\r\n      }\r\n    }, []);\r\n\r\n    return <WrappedComponent {...props} metadata={userMetadata} />;\r\n  });\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return state;\r\n};\r\n\r\nexport default withRanking;\r\n","C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\components\\Comparisons\\hoc\\withComparisons.js",[],"C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\components\\Sliders\\MultiSlider.js",[],"C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\components\\Sliders\\hoc\\withSlider.js",["108","109"],"C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\ahpLogic\\index.js",[],"C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\components\\Ranking\\Chart.js",["110","111","112"],"import React, { PureComponent } from \"react\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  Cell,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst convertData = (data) => {\r\n  return { name: data[0], weight: data[1] };\r\n};\r\n\r\nconst Chart = (props) => {\r\n  const [data, setData] = React.useState([]);\r\n  const jsfiddleUrl = \"https://jsfiddle.net/alidingling/30763kr7/\";\r\n\r\n  React.useEffect(() => {\r\n    if (props.data) {\r\n      const dataArr = [];\r\n\r\n      for (const node of props.data) {\r\n        dataArr.push(convertData(node));\r\n      }\r\n\r\n      setData(dataArr);\r\n    }\r\n  }, [props.data]);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        width: \"100%\",\r\n        height: 350,\r\n        padding: \"1em\",\r\n      }}\r\n    >\r\n      {props.showText === true ? (\r\n        <Typography\r\n          style={{ position: \"absolute\", alignSelf: \"center\" }}\r\n          variant=\"overline\"\r\n        >\r\n          Cel: {props.goal}\r\n        </Typography>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      <ResponsiveContainer>\r\n        <BarChart\r\n          data={data}\r\n          margin={{\r\n            top: 35,\r\n            right: 5,\r\n            left: 5,\r\n            bottom: 5,\r\n          }}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"2 4\" />\r\n          <XAxis dataKey=\"name\" />\r\n          <YAxis />\r\n          <Tooltip />\r\n          <Legend />\r\n          <Bar dataKey=\"weight\" name={props.label} fill={props.color} />\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return state;\r\n};\r\n\r\nexport default connect(mapStateToProps)(Chart);\r\n","C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\components\\Ranking\\TwoColumnTable.js",[],"C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\components\\Experts\\Experts.js",[],"C:\\Users\\hiche\\Desktop\\Projects\\rfc\\src\\components\\Experts\\ExpertsAccordion.js",["113","114"],"import React from \"react\";\r\nimport {\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  Typography,\r\n  Grid,\r\n  Paper,\r\n} from \"@material-ui/core\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport TwoColumnTable from \"../Ranking/TwoColumnTable\";\r\n\r\nconst mergeObjects = (arrObj) => Object.assign({}, ...arrObj);\r\n\r\nexport default function SimpleAccordion({ expertsData }) {\r\n  const accordions = expertsData.map((data) => {\r\n    return (\r\n      <Grid\r\n        key={data.expert}\r\n        item\r\n        xs={12}\r\n        md={expertsData.length <= 1 ? 12 : expertsData.length === 2 ? 6 : 4}\r\n      >\r\n        <Accordion square>\r\n          <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n            <Typography>{data.expert}</Typography>\r\n          </AccordionSummary>\r\n\r\n          <AccordionDetails>\r\n            <TwoColumnTable\r\n              items={data.finalRank}\r\n              type=\"variants\"\r\n            ></TwoColumnTable>\r\n          </AccordionDetails>\r\n        </Accordion>\r\n      </Grid>\r\n    );\r\n  });\r\n\r\n  return <Grid container>{accordions}</Grid>;\r\n}\r\n",{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","severity":1,"message":"120","line":103,"column":3,"nodeType":"121","endLine":103,"endColumn":18,"suggestions":"122"},{"ruleId":"119","severity":1,"message":"123","line":30,"column":6,"nodeType":"124","endLine":30,"endColumn":8,"suggestions":"125"},{"ruleId":"119","severity":1,"message":"126","line":52,"column":6,"nodeType":"124","endLine":52,"endColumn":22,"suggestions":"127"},{"ruleId":"128","severity":1,"message":"129","line":54,"column":30,"nodeType":"130","messageId":"131","endLine":54,"endColumn":32},{"ruleId":"132","severity":1,"message":"133","line":81,"column":9,"nodeType":"134","messageId":"135","endLine":81,"endColumn":20},{"ruleId":"132","severity":1,"message":"136","line":3,"column":10,"nodeType":"134","messageId":"135","endLine":3,"endColumn":16},{"ruleId":"128","severity":1,"message":"129","line":11,"column":30,"nodeType":"130","messageId":"131","endLine":11,"endColumn":32},{"ruleId":"119","severity":1,"message":"137","line":66,"column":8,"nodeType":"124","endLine":66,"endColumn":10,"suggestions":"138"},{"ruleId":"132","severity":1,"message":"139","line":37,"column":9,"nodeType":"134","messageId":"135","endLine":37,"endColumn":18},{"ruleId":"119","severity":1,"message":"140","line":78,"column":8,"nodeType":"124","endLine":78,"endColumn":10,"suggestions":"141"},{"ruleId":"132","severity":1,"message":"142","line":1,"column":17,"nodeType":"134","messageId":"135","endLine":1,"endColumn":30},{"ruleId":"132","severity":1,"message":"143","line":6,"column":3,"nodeType":"134","messageId":"135","endLine":6,"endColumn":7},{"ruleId":"132","severity":1,"message":"144","line":22,"column":9,"nodeType":"134","messageId":"135","endLine":22,"endColumn":20},{"ruleId":"132","severity":1,"message":"145","line":8,"column":3,"nodeType":"134","messageId":"135","endLine":8,"endColumn":8},{"ruleId":"132","severity":1,"message":"146","line":13,"column":7,"nodeType":"134","messageId":"135","endLine":13,"endColumn":19},"no-native-reassign",["147"],"no-negated-in-lhs",["148"],"react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setTabsVariant'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [matches] as a second argument to the useEffect Hook.","MemberExpression",["149"],"React Hook React.useEffect has a missing dependency: 'sliders'. Either include it or remove the dependency array.","ArrayExpression",["150"],"React Hook React.useEffect has a missing dependency: 'finalRank'. Either include it or remove the dependency array.",["151"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'handleClick' is assigned a value but never used.","Identifier","unusedVar","'Button' is defined but never used.","React Hook React.useEffect has missing dependencies: 'criterias', 'criteriasSliders', 'props.expertName', 'variants', and 'variantsSliders'. Either include them or remove the dependency array.",["152"],"'initValue' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'isCriteriaPresent', 'props', and 'value'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside React.useEffect.",["153"],"'PureComponent' is defined but never used.","'Cell' is defined but never used.","'jsfiddleUrl' is assigned a value but never used.","'Paper' is defined but never used.","'mergeObjects' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"154","fix":"155"},{"desc":"156","fix":"157"},{"desc":"158","fix":"159"},{"desc":"160","fix":"161"},{"desc":"162","fix":"163"},"Add dependencies array: [matches]",{"range":"164","text":"165"},"Update the dependencies array to be: [sliders]",{"range":"166","text":"167"},"Update the dependencies array to be: [finalRank, props.metadata]",{"range":"168","text":"169"},"Update the dependencies array to be: [criterias, criteriasSliders, props.expertName, variants, variantsSliders]",{"range":"170","text":"171"},"Update the dependencies array to be: [isCriteriaPresent, props, value]",{"range":"172","text":"173"},[3031,3031],", [matches]",[786,788],"[sliders]",[1783,1799],"[finalRank, props.metadata]",[2222,2224],"[criterias, criteriasSliders, props.expertName, variants, variantsSliders]",[2238,2240],"[isCriteriaPresent, props, value]"]